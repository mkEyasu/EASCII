store_value = {
    0: " ",
    1: "ሀ", 21: "ሕ", 41: "ራ", 61: "ሿ", 81: "ቤ", 101: "ቸ", 121: "ኔ", 141: "ከ", 161: "ው", 181: "ዢ", 201: "ጀ", 221: "ጜ",
    2: "ሁ", 22: "ሗ", 42: "ሬ", 62: "ቀ", 82: "ብ", 102: "ቹ", 122: "ን", 142: "ኩ", 162: "ዎ", 182: "ዣ", 202: "ጁ", 222: "ጝ",
    3: "ሂ", 23: "መ", 43: "ር", 63: "ቁ", 83: "ቦ", 103: "ቺ", 123: "ኖ", 143: "ኪ", 163: "ዏ", 183: "ዤ", 203: "ጂ", 223: "ጞ",
    4: "ሃ", 24: "ሙ", 44: "ሮ", 64: "ቂ", 84: "ቧ", 104: "ቻ", 124: "ኗ", 144: "ካ", 164: "ዐ", 184: "ዥ", 204: "ጃ", 224: "ጟ",
    5: "ሄ", 25: "ሚ", 45: "ሯ", 65: "ቃ", 85: "ቨ", 105: "ቼ", 125: "ኘ", 145: "ኬ", 165: "ዑ", 185: "ዦ", 205: "ጄ", 225: "ጠ",
    6: "ህ", 26: "ማ", 46: "ሰ", 66: "ቄ", 86: "ቩ", 106: "ች", 126: "ኙ", 146: "ክ", 166: "ዒ", 186: "ዧ", 206: "ጅ", 226: "ጡ",
    7: "ሆ", 27: "ሜ", 47: "ሱ", 67: "ቅ", 87: "ቪ", 107: "ቾ", 127: "ኚ", 147: "ኮ", 167: "ዓ", 187: "የ", 207: "ጆ", 227: "ጢ",
    8: "ለ", 28: "ም", 48: "ሲ", 68: "ቆ", 88: "ቫ", 108: "ቿ", 128: "ኛ", 148: "ኳ", 168: "ዔ", 188: "ዩ", 208: "ጇ", 228: "ጣ",
    9: "ሉ", 29: "ሞ", 49: "ሳ", 69: "ቋ", 89: "ቬ", 109: "ኀ", 129: "ኜ", 149: "ኸ", 169: "ዕ", 189: "ዪ", 209: "ገ", 229: "ጤ",
    10: "ሊ", 30: "ሟ", 50: "ሴ", 70: "ቐ", 90: "ቭ", 110: "ኁ", 130: "ኝ", 150: "ኹ", 170: "ዖ", 190: "ያ", 210: "ጉ", 230: "ጥ",
    11: "ላ", 31: "ሠ", 51: "ስ", 71: "ቑ", 91: "ቮ", 111: "ኂ", 131: "ኞ", 151: "ኺ", 171: "ዘ", 191: "ዬ", 211: "ጊ", 231: "ጦ",
    12: "ሌ", 32: "ሡ", 52: "ሶ", 72: "ቒ", 92: "ቯ", 112: "ኃ", 132: "ኟ", 152: "ኻ", 172: "ዙ", 192: "ይ", 212: "ጋ", 232: "ጧ",
    13: "ል", 33: "ሢ", 53: "ሷ", 73: "ቓ", 93: "ተ", 113: "ኄ", 133: "አ", 153: "ኼ", 173: "ዚ", 193: "ዮ", 213: "ጌ", 233: "ጨ",
    14: "ሎ", 34: "ሣ", 54: "ሸ", 74: "ቔ", 94: "ቱ", 114: "ኅ", 134: "ኡ", 154: "ኽ", 174: "ዛ", 194: "ዯ", 214: "ግ", 234: "ጩ",
    15: "ሏ", 35: "ሤ", 55: "ሹ", 75: "ቕ", 95: "ቲ", 115: "ኆ", 135: "ኢ", 155: "ኾ", 175: "ዜ", 195: "ደ", 215: "ጎ", 235: "ጪ",
    16: "ሐ", 36: "ሥ", 56: "ሺ", 76: "ቖ", 96: "ታ", 116: "ኇ", 136: "ኣ", 156: "ወ", 176: "ዝ", 196: "ዱ", 216: "ጓ", 236: "ጫ",
    17: "ሑ", 37: "ሦ", 57: "ሻ", 77: "በ", 97: "ቴ", 117: "ነ", 137: "ኤ", 157: "ዉ", 177: "ዞ", 197: "ዲ", 217: "ጘ", 237: "ጬ",
    18: "ሒ", 38: "ረ", 58: "ሼ", 78: "ቡ", 98: "ት", 118: "ኑ", 138: "እ", 158: "ዊ", 178: "ዟ", 198: "ዳ", 218: "ጙ", 238: "ጭ",
    19: "ሓ", 39: "ሩ", 59: "ሽ", 79: "ቢ", 99: "ቶ", 119: "ኒ", 139: "ኦ", 159: "ዋ", 179: "ዠ", 199: "ዴ", 219: "ጚ", 239: "ጮ",
    20: "ሔ", 40: "ሪ", 60: "ሾ", 80: "ባ", 100: "ቷ", 120: "ና", 140: "ኧ", 160: "ዌ", 180: "ዡ", 200: "ድ", 220: "ጛ", 240: "ጯ",
    241: "ጰ", 251: "ጺ", 261: "ፄ", 271: "ፏ", 281: "፣", 291: "፭", 301: "፷",
    242: "ጱ", 252: "ጻ", 262: "ፅ", 272: "ፐ", 282: "፤", 292: "፮", 302: "፸",
    243: "ጲ", 253: "ጼ", 263: "ፆ", 273: "ፑ", 283: "፥", 293: "፯",  303: "፹",
    244: "ጳ", 254: "ጽ", 264: "ፈ", 274: "ፒ", 284: "፦", 294: "፰", 304: "፺",
    245: "ጴ", 255: "ጾ", 265: "ፉ", 275: "ፓ", 285: "፧", 295: "፱", 305: "፻",
    246: "ጵ", 256: "ጿ", 266: "ፊ", 276: "ፔ", 286: "፨", 296: "፲", 306: "፼",
    247: "ጶ", 257: "ፀ", 267: "ፋ", 277: "ፕ", 287: "፩", 297: "፳",
    248: "ጷ", 258: "ፁ", 268: "ፌ", 278: "ፖ", 288: "፪", 298: "፴",
    249: "ጸ", 259: "ፂ", 269: "ፍ", 279: "፡", 289: "፫", 299: "፵",
    250: "ጹ", 260: "ፃ", 270: "ፎ", 280: "።", 290: "፬", 300: "፶",


}


class Ealpha:
    """
    Usage:

    NOTE: The Default ``space``  value is False
    *
        from EASCII import Ealpha
        eth = Ealpha()
        print(eth.eord("ኢትዮጵያ", space=True))
        135 98 193 246 190
    *
        print(eth.eord("ኢትዮጵያ"))
        13598193246190
    *
        print(eth.eord("ኢትዮጵያ ሀገሬ"))
        13598193246190 120942
    *
        print(eth.eord("ኢትዮጵያ ሀገሬ", space=True))
        135 98 193 246 190 0 1 209 42
    #################################################################
    *
        from EASCII import Ealpha
        eth = Ealpha()
        print(eth.echr(1))
        ሀ
    *
        print(eth.echr(135, 98, 193, 246, 190, 0, 1, 209, 42))
        ኢትዮጵያ ሀገሬ
    *
        print(eth.echr(135, 98, 193, 246, 190, 1, 209, 42))
        ኢትዮጵያሀገሬ
    *
        print(eth.echr(135, 98, 193, 246, 190, 1, 209, 42, space=True))
        ኢ ት ዮ ጵ ያ  ሀ ገ ሬ
    """

    def __init__(self):
        pass

    def eord(self, num, space=False):
        res = ""
        for ln in num:
            for i in list(i for i in store_value if store_value[i] == ln):
                if store_value[0] in ln:
                    res += str(i) + " "
                elif space is True:
                    res += str(i) + " "
                else:
                    res += str(i)
        return res

    def echr(self, *num, space=False):
        val = ""
        num = str(num)
        if len(num.split(", ")) >= 2:
            for ln in num.strip("(, )").split(", "):
                if int(ln) < 0 or int(ln) > 306:
                    exit(f"Check your input `{ln}`")
                if store_value[0] in ln:
                    val += store_value[int(ln)] + " "
                elif space is True:
                    val += store_value[int(ln)] + " "
                else:
                    val += store_value[int(ln)]
            return val
        else:
            spelled = int(num)
            if 0 < spelled <= 306:
                return store_value[spelled]
            elif spelled < 0 or spelled >= 307:
                raise Exception("Error! spell must be between 0 and 306")
            else:
                pass
